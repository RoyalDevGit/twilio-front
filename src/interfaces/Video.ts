import { AverageRatings } from 'interfaces/Comment'
import { Expert } from 'interfaces/Expert'
import { FileTracker } from 'interfaces/FileTracker'
import { Model, ModelRef } from 'interfaces/Model'
import { User } from 'interfaces/User'

export enum VideoType {
  ExpertIntro = 'expert_intro',
  Content = 'content',
  SessionRecording = 'session_recording',
}

export enum VideoThumbnailType {
  AutoGenerated = 'auto_generated',
  Custom = 'custom',
}
export interface VideoThumbnail extends Model {
  thumbnailType: VideoThumbnailType
  file: FileTracker
  createdBy: ModelRef<User>
  uploaded: string
}

export enum VideoStatus {
  Draft = 'draft',
  Uploaded = 'uploaded',
  Published = 'published',
}

export enum VideoVisibility {
  Public = 'public',
  Private = 'private',
  Unlisted = 'unlisted',
}

export enum VideoAudience {
  Everyone = 'everyone',
  Adults = 'adults',
}

export interface Video extends Model {
  videoType: VideoType
  file: FileTracker
  title: string
  description?: string
  thumbnails: VideoThumbnail[]
  selectedThumbnail: string
  visibility: VideoVisibility
  audience: VideoAudience
  madeForKids: boolean
  tags: string[]
  language?: string
  status: VideoStatus
  expert?: ModelRef<Expert>
  createdBy: ModelRef<User>
  uploaded: string
  averageRatings?: AverageRatings
  totalFavorites: number
  isFavorite: boolean
  containsPaidPromotion: boolean
}
